@startuml 
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

LAYOUT_WITH_LEGEND()

title Container Diagram for Electronic Health Record Application

Person(employee, "Internal Employee", "Internal employee of the health insurance agency")
Person(customer, "Health insurance customer", "Customer of the health insurance agency", "user")
Person(auditor, "External Auditors", "The external auditors of the system")

System_Boundary(c1, "Electronic Health Record Application") { 
     
    Container(webApp, "Web Application", "Java, Spring Boot", "Delivers the static content and the SPA")
    Container(spa, "Single-Page App", "Microsoft Blazor", "Provides all the electronic health record keeping functionality to internal employees of agency via their web browser")
    Container(staticContent, "Static Content", "HTML", "Provides a static content")
    ContainerDb(database, "Database", "SQL Database", "Stores customer health records, hased auth credentials, access logs, etc.")
    Container(apiServer, "API Application", "Go, Docker Container", "Provides accounting functionality via API")
}

' System(apiServer, "Api Application", "Provides the overall accounting functionality by providing a synchronous JSON/HTTPS based API")

System_Ext(emailSystem, "Email System", "The exernal Microsoft Exchange System")
System_Ext(dataWHS, "Data Warehouse System", "Accesses the reporting functionality of the SAP system")
System_Ext(sapSystem, "SAP R/3 System", "SAP R/3 System connected asynchronously using RFC (Remote Function Call)")



Rel(employee, webApp, "uses") 
Rel(employee, staticContent, "uses") 
Rel(employee, spa, "uses") 

Rel_Neighbor(webApp, spa, "delivers")  
Rel_Neighbor(webApp, staticContent, "delivers")  

Rel(spa, apiServer, "uses", "sync JSON/HTTPS")
Rel(staticContent, apiServer, "uses", "sync JSON/HTTPS")

Rel_Neighbor(apiServer, database, "writes to and reads from")
Rel(dataWHS, sapSystem, "access reporting functionalities", "DB2 system") 
Rel(auditor, dataWHS, "uses")
Rel(emailSystem, customer, "sends email to", "sync, smtp")

Rel(apiServer, emailSystem, "sends email using")
Rel(apiServer, sapSystem, "depends on", "async, RFC")
 
@enduml